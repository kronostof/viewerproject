/*
 * SimpleGLJPanel2.java
 *
 * Created on 30. Juli 2008, 16:18
 */

package graphviewer.vue.vue3d;

import com.sun.opengl.util.Animator;
import java.awt.FlowLayout;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLJPanel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author cylab
 * @author mbien
 */
public class Vue extends JPanel {

    private Animator animator;

    Vue(GraphDeVisualisation3D graph) {




        
        initComponents();
        //setTitle("Simple Graph Viewer");

        panel.addGLEventListener(new GLRenderer(graph));
        animator = new Animator(panel);

    }

    @Override
    public void setVisible(boolean show){
        if(!show)
            animator.stop();
        super.setVisible(show);
        if(!show)
            animator.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        JPanel commandePanel = new JPanel();
        commandePanel.setLayout(new FlowLayout());
        JLabel commandeLabel = new JLabel();


        commandePanel.add(commandeLabel);


        
        panel = new GLJPanel(createGLCapabilites());

        //setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        commandeLabel.setText("Below you see a GLJPanel");


        GroupLayout panelLayout = new GroupLayout(panel);
        panel.setLayout(panelLayout);
        
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 1600, Short.MAX_VALUE)
        );

        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
/*
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commandePanel))
                .addContainerGap())

        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(commandePanel)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())

        );

        pack();*/
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called from within initComponents().
     * hint: to customize the generated code choose 'Customize Code' in the contextmenu
     * of the selected UI Component you wish to cutomize in design mode.
     * @return Returns customized GLCapabilities.
     */
    private GLCapabilities createGLCapabilites() {

        GLCapabilities capabilities = new GLCapabilities();
        capabilities.setHardwareAccelerated(true);

        // try to enable 2x anti aliasing - should be supported on most hardware
        capabilities.setNumSamples(2);
        capabilities.setSampleBuffers(true);

        return capabilities;
    }

     // Variables declaration - do not modify//GEN-BEGIN:variables
    private GLJPanel panel;
    // End of variables declaration//GEN-END:variables

}
